import asyncio
import logging
from datetime import datetime, timedelta
from typing import List, Tuple

from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from config import BOT_TOKEN, GAME_SETTINGS, LOGGING_SETTINGS
from database import Database
from game_logic import GameLogic
from logger_config import setup_logging, get_logger

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = setup_logging(
    log_dir=LOGGING_SETTINGS['log_directory'],
    max_size_mb=LOGGING_SETTINGS['max_log_size_mb']
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
db = Database()
game_logic = GameLogic()

# –ö—ç—à —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–æ–≤ (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –ª—É—á—à–µ –ø–æ–ª—É—á–∞—Ç—å —á–µ—Ä–µ–∑ Telegram API)
chat_participants_cache = {}

def get_throw_button() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –±—Ä–æ—Å–∫–∞ –≥–æ–≤–Ω–∞"""
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üí© –ú–µ—Ç–Ω—É—Ç—å –≥–æ–≤–Ω–∞", callback_data="throw_shit"))
    return builder.as_markup()

async def get_chat_participants(chat_id: int) -> List[Tuple[int, str]]:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ —á–µ—Ä–µ–∑ Telegram API"""
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ (–æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)
        cache_key = f"{chat_id}_{datetime.now().strftime('%Y%m%d_%H%M')[:-1]}"  # –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ 10 –º–∏–Ω—É—Ç
        
        if cache_key not in chat_participants_cache:
            try:
                # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ —á–µ—Ä–µ–∑ Telegram API
                chat_member_count = await bot.get_chat_member_count(chat_id)
                logger.info(f"üë• –í —á–∞—Ç–µ {chat_id} –≤—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {chat_member_count}")
                
                # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (–º–∞–∫—Å–∏–º—É–º 200 –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏)
                participants = []
                async for member in bot.get_chat_members(chat_id, limit=200):
                    if not member.user.is_bot:  # –ò—Å–∫–ª—é—á–∞–µ–º –±–æ—Ç–æ–≤
                        username = member.user.username or member.user.first_name or f"user{member.user.id}"
                        participants.append((member.user.id, username))
                
                chat_participants_cache[cache_key] = participants
                logger.info(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(participants)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ {chat_id} —á–µ—Ä–µ–∑ API")
                
            except Exception as api_error:
                logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–µ—Ä–µ–∑ API: {api_error}")
                # Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                participants = await db.get_chat_participants(chat_id)
                chat_participants_cache[cache_key] = participants
                logger.info(f"üìä –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î: {len(participants)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
        
        participants = chat_participants_cache[cache_key]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∏
        if not participants:
            logger.warning(f"‚ö†Ô∏è –í —á–∞—Ç–µ {chat_id} –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –∏–≥—Ä—ã")
            return []
        
        logger.info(f"üë• –ò—Å–ø–æ–ª—å–∑—É–µ–º {len(participants)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ {chat_id}")
        return participants
    
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ {chat_id}: {e}")
        return []

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = message.from_user
    chat_id = message.chat.id
    
    logger.info(f"üöÄ –ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username} (ID: {user.id}) –≤ —á–∞—Ç–µ {chat_id}")
    
    await message.answer(
        "üéØ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É ¬´–ì–æ–≤–Ω–æ–ú—ë—Ç¬ª!\n\n"
        "üí© –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –º–µ—Ç–Ω—É—Ç—å –≥–æ–≤–Ω–∞ –≤ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —á–∞—Ç–∞.\n\n"
        "üéØ –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π /go @username –¥–ª—è –º–µ—Ç–∞–Ω–∏—è –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!\n\n"
        "üé≤ –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—Å–µ–≥–¥–∞ —Å–ª—É—á–∞–π–Ω—ã–π - –º–æ–∂–µ—à—å –ø–æ–ø–∞—Å—Ç—å –≤ —Ü–µ–ª—å, –ø—Ä–æ–º–∞—Ö–Ω—É—Ç—å—Å—è –∏–ª–∏ —É—Å—Ç—Ä–æ–∏—Ç—å –≥–æ–≤–Ω–æ–±—É–º!\n\n"
        "üî• –¶–µ–ª—å –∏–≥—Ä—ã - –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å —á–∞—Ç –≤ –≥–æ–≤–Ω–æ—Ö–∞–æ—Å!\n"
        "üí° –†–∞–±–æ—Ç–∞–µ—Ç –≤ –ª—é–±–æ–º —á–∞—Ç–µ, –¥–∞–∂–µ —Å –æ–¥–Ω–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–º!",
        reply_markup=get_throw_button()
    )
    
    logger.info(f"‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.username}")

@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    user = message.from_user
    chat_id = message.chat.id
    
    logger.info(f"‚ùì –ö–æ–º–∞–Ω–¥–∞ /help –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username} (ID: {user.id}) –≤ —á–∞—Ç–µ {chat_id}")
    
    help_text = (
        "üéØ <b>–ì–æ–≤–Ω–æ–ú—ë—Ç - –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:</b>\n\n"
        "üí© <b>–ö–∞–∫ –∏–≥—Ä–∞—Ç—å:</b>\n"
        "‚Ä¢ –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´üí© –ú–µ—Ç–Ω—É—Ç—å –≥–æ–≤–Ω–∞¬ª –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–π —Ü–µ–ª–∏\n"
        "‚Ä¢ –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π /go @username –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ü–µ–ª–∏\n"
        "‚Ä¢ –†–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω –≤ —á–∞—Ç–µ\n"
        "‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –≤ –ª—é–±–æ–º —á–∞—Ç–µ, –¥–∞–∂–µ —Å –æ–¥–Ω–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–º!\n\n"
        "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
        "‚Ä¢ /stats - –ø–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞, –∏–≥—Ä–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –≤–∞—à–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã\n"
        "‚Ä¢ /ratings - —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –Ω–µ–¥–µ–ª–∏\n\n"
        "üìä <b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start - –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É\n"
        "/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "/stats - –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–∞—Ç–∞\n"
        "/ratings - –ø–æ–∫–∞–∑–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥–∏ –Ω–µ–¥–µ–ª–∏\n"
        "/refresh - –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"
        "/participants - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"
        "/go @username - –º–µ—Ç–Ω—É—Ç—å –≥–æ–≤–Ω–æ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n\n"
        "üî• <b>–¶–µ–ª—å:</b> –£—Å—Ç—Ä–æ–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≥–æ–≤–Ω–æ—Ö–∞–æ—Å –≤ —á–∞—Ç–µ!"
    )
    
    await message.answer(help_text, parse_mode="HTML", reply_markup=get_throw_button())
    logger.info(f"‚úÖ –°–ø—Ä–∞–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.username}")

@dp.message(Command("stats"))
async def cmd_stats(message: types.Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–∞—Ç–∞"""
    user = message.from_user
    chat_id = message.chat.id
    
    logger.info(f"üìä –ö–æ–º–∞–Ω–¥–∞ /stats –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username} (ID: {user.id}) –≤ —á–∞—Ç–µ {chat_id}")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    chat_stats = await db.get_chat_stats(chat_id, days=30)
    game_stats = await db.get_game_stats(chat_id, days=30)
    
    if not chat_stats:
        stats_text = "üìä –ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ù–∞—á–Ω–∏—Ç–µ –∏–≥—Ä–∞—Ç—å!"
        await message.answer(stats_text, parse_mode="HTML", reply_markup=get_throw_button())
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–∞—Ç–∞
    stats_text = f"üìä <b>–û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ß–ê–¢–ê (30 –¥–Ω–µ–π):</b>\n\n"
    
    # –û–±—â–∏–µ —Ü–∏—Ñ—Ä—ã
    total_throws = chat_stats.get('total_throws', 0)
    stats_text += f"üéØ <b>–í—Å–µ–≥–æ –±—Ä–æ—Å–∫–æ–≤:</b> {total_throws}\n"
    

    
    # –¢–æ–ø –º–µ—Ç–∞—Ç–µ–ª–µ–π
    top_throwers = chat_stats.get('top_throwers', [])
    if top_throwers:
        stats_text += "\nüèÜ <b>–¢–æ–ø –º–µ—Ç–∞—Ç–µ–ª–µ–π:</b>\n"
        for i, (username, throws) in enumerate(top_throwers, 1):
            stats_text += f"{i}. @{username}: {throws} –±—Ä–æ—Å–∫–æ–≤\n"
    
    # –¢–æ–ø —Å—Ç—Ä–∞–¥–∞–ª—å—Ü–µ–≤
    top_victims = chat_stats.get('top_victims', [])
    if top_victims:
        stats_text += "\nüòµ <b>–¢–æ–ø —Å—Ç—Ä–∞–¥–∞–ª—å—Ü–µ–≤:</b>\n"
        for i, (username, hits) in enumerate(top_victims, 1):
            stats_text += f"{i}. @{username}: {hits} –ø–æ–ø–∞–¥–∞–Ω–∏–π\n"
    
    # –¢–æ–ø –Ω–µ—É–¥–∞—á–Ω–∏–∫–æ–≤
    top_losers = chat_stats.get('top_losers', [])
    if top_losers:
        stats_text += "\nü§° <b>–¢–æ–ø –Ω–µ—É–¥–∞—á–Ω–∏–∫–æ–≤:</b>\n"
        for i, (username, self_hits) in enumerate(top_losers, 1):
            stats_text += f"{i}. @{username}: {self_hits} —Ä–∞–∑ —Å–∞–º —Å–µ–±—è –æ–±–æ—Å—Ä–∞–ª\n"
    
    # –¢–æ–ø —Å–Ω–∞–π–ø–µ—Ä–æ–≤
    top_snipers = chat_stats.get('top_snipers', [])
    if top_snipers:
        stats_text += "\nüéØ <b>–¢–æ–ø —Å–Ω–∞–π–ø–µ—Ä–æ–≤:</b>\n"
        for i, (username, hits, total, accuracy) in enumerate(top_snipers, 1):
            stats_text += f"{i}. @{username}: {accuracy}% —Ç–æ—á–Ω–æ—Å—Ç—å ({hits}/{total})\n"
    

    
    # –ò–≥—Ä–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    if game_stats:
        stats_text += "\nüéÆ <b>–ò–ì–†–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:</b>\n"
        
        # –°–∞–º—ã–π –¥–ª–∏–Ω–Ω—ã–π –≥–æ–≤–Ω–æ-—Å—Ç—Ä–∏–∫
        longest_streak = game_stats.get('longest_streak')
        if longest_streak and longest_streak[1] > 0:
            username, streak = longest_streak
            stats_text += f"üî• <b>–°–∞–º—ã–π –¥–ª–∏–Ω–Ω—ã–π –≥–æ–≤–Ω–æ-—Å—Ç—Ä–∏–∫:</b> @{username} ({streak} –ø–æ–¥—Ä—è–¥)\n"
        
        # –ì–æ–≤–Ω–æ-–º–∞—Å—Ç–µ—Ä
        shit_master = game_stats.get('shit_master')
        if shit_master:
            username, unique_targets = shit_master
            stats_text += f"üëë <b>–ì–æ–≤–Ω–æ-–º–∞—Å—Ç–µ—Ä:</b> @{username} (–º–µ—Ç–Ω—É–ª –≤ {unique_targets} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)\n"
        
        # –ì–æ–≤–Ω–æ-–≤–µ–∑–µ–Ω–∏–µ
        lucky_bastard = game_stats.get('lucky_bastard')
        if lucky_bastard:
            username, times_hit, times_thrown = lucky_bastard
            stats_text += f"üçÄ <b>–ì–æ–≤–Ω–æ-–≤–µ–∑–µ–Ω–∏–µ:</b> @{username} (–±—Ä–æ—Å–∏–ª {times_thrown}, –ø–æ–ª—É—á–∏–ª {times_hit})\n"
        
        # –ì–æ–≤–Ω–æ-–º–∞–≥
        shit_mage = game_stats.get('shit_mage')
        if shit_mage:
            username, special_effects = shit_mage
            stats_text += f"‚ö° <b>–ì–æ–≤–Ω–æ-–º–∞–≥:</b> @{username} ({special_effects} –æ—Å–æ–±—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤)\n"
    
    # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ —Ä–µ–π—Ç–∏–Ω–≥–∏
    stats_text += "\nüèÖ <b>–î–û–°–¢–ò–ñ–ï–ù–ò–Ø –ò –†–ï–ô–¢–ò–ù–ì–ò:</b>\n"
    
    # –ö–æ—Ä–æ–ª—å –≥–æ–≤–Ω–∞ (–∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ñ—É–Ω–∫—Ü–∏–∏)
    ratings = await db.get_ratings(chat_id, days=7)
    if ratings.get('king'):
        username, hits = ratings['king']
        stats_text += f"üëë <b>–ö–æ—Ä–æ–ª—å –≥–æ–≤–Ω–∞ –Ω–µ–¥–µ–ª–∏:</b> @{username} ({hits} –ø–æ–ø–∞–¥–∞–Ω–∏–π)\n"
    
    if ratings.get('victim'):
        username, hit_count = ratings['victim']
        stats_text += f"üòµ <b>–ì–ª–∞–≤–Ω—ã–π –æ–±–æ—Å—Ä–∞–Ω–Ω—ã–π –Ω–µ–¥–µ–ª–∏:</b> @{username} ({hit_count} —Ä–∞–∑)\n"
    
    if ratings.get('idiot'):
        username, self_hits = ratings['idiot']
        stats_text += f"ü§° <b>–î–æ–ª–±–æ—ë–± –Ω–µ–¥–µ–ª–∏:</b> @{username} ({self_hits} —Ä–∞–∑)\n"
    
    # –õ–∏—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_stats = await db.get_user_stats(user.id)
    if user_stats:
        stats_text += f"\nüë§ <b>–í–ê–®–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê:</b>\n"
        stats_text += f"üéØ –ü—Ä—è–º—ã—Ö –ø–æ–ø–∞–¥–∞–Ω–∏–π: {user_stats['direct_hits']}\n"
        stats_text += f"ü§° –ü—Ä–æ–º–∞—Ö–æ–≤: {user_stats['misses']}\n"
        stats_text += f"üí© –°–∞–º —Å–µ–±—è –æ–±–æ—Å—Ä–∞–ª: {user_stats['self_hits']}\n"
        stats_text += f"üòµ –°—Ç—Ä–∞–¥–∞–ª –æ—Ç –¥—Ä—É–≥–∏—Ö: {user_stats['times_hit']}\n"
        
        if user_stats['direct_hits'] + user_stats['misses'] + user_stats['self_hits'] > 0:
            accuracy = round((user_stats['direct_hits'] / (user_stats['direct_hits'] + user_stats['misses'] + user_stats['self_hits'])) * 100, 1)
            stats_text += f"üéØ –í–∞—à–∞ —Ç–æ—á–Ω–æ—Å—Ç—å: {accuracy}%\n"
        
        total_score = user_stats['direct_hits'] - user_stats['misses'] - user_stats['self_hits']
        stats_text += f"üî• –û–±—â–∏–π —Å—á—ë—Ç: {total_score}"
    
    await message.answer(stats_text, parse_mode="HTML", reply_markup=get_throw_button())
    logger.info(f"‚úÖ –ü–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.username}")

@dp.message(Command("ratings"))
async def cmd_ratings(message: types.Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥–∏"""
    user = message.from_user
    chat_id = message.chat.id
    
    logger.info(f"üèÜ –ö–æ–º–∞–Ω–¥–∞ /ratings –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username} (ID: {user.id}) –≤ —á–∞—Ç–µ {chat_id}")
    
    ratings = await db.get_ratings(chat_id, days=7)
    
    ratings_text = "üèÜ <b>–†–µ–π—Ç–∏–Ω–≥–∏ –Ω–µ–¥–µ–ª–∏:</b>\n\n"
    
    if ratings.get('king'):
        username, hits = ratings['king']
        ratings_text += f"üëë <b>–ö–æ—Ä–æ–ª—å –≥–æ–≤–Ω–∞:</b> @{username} ({hits} –ø–æ–ø–∞–¥–∞–Ω–∏–π)\n"
    
    if ratings.get('victim'):
        username, hit_count = ratings['victim']
        ratings_text += f"üòµ <b>–ì–ª–∞–≤–Ω—ã–π –æ–±–æ—Å—Ä–∞–Ω–Ω—ã–π:</b> @{username} ({hit_count} —Ä–∞–∑)\n"
    
    if ratings.get('idiot'):
        username, self_hits = ratings['idiot']
        ratings_text += f"ü§° <b>–î–æ–ª–±–æ—ë–± –Ω–µ–¥–µ–ª–∏:</b> @{username} ({self_hits} —Ä–∞–∑)\n"
    
    if not any(ratings.values()):
        ratings_text += "üìä –ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–æ–≤. –ò–≥—Ä–∞–π—Ç–µ –±–æ–ª—å—à–µ!"
    
    await message.answer(ratings_text, parse_mode="HTML", reply_markup=get_throw_button())
    logger.info(f"‚úÖ –†–µ–π—Ç–∏–Ω–≥–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.username}")

@dp.callback_query(F.data == "throw_shit")
async def process_throw_shit(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –±—Ä–æ—Å–∫–∞ –≥–æ–≤–Ω–∞"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É—Å—Ç–∞—Ä–µ–ª –ª–∏ callback (—É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏ –¥–æ 24 —á–∞—Å–æ–≤)
        if callback.message.date and (datetime.now().replace(tzinfo=None) - callback.message.date.replace(tzinfo=None)).total_seconds() > 86400:
            logger.warning(f"‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω —É—Å—Ç–∞—Ä–µ–≤—à–∏–π callback –æ—Ç {callback.from_user.username}")
            try:
                await callback.answer("‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ —É—Å—Ç–∞—Ä–µ–ª–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
            except Exception:
                pass
            return
        
        user = callback.from_user
        chat_id = callback.message.chat.id
        
        logger.info(f"üí© –ö–Ω–æ–ø–∫–∞ –±—Ä–æ—Å–∫–∞ –Ω–∞–∂–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user.username} (ID: {user.id}) –≤ —á–∞—Ç–µ {chat_id}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É
        await db.add_user(
            user_id=user.id,
            username=user.username,
            first_name=user.first_name,
            last_name=user.last_name
        )
        
        # –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞
        participants = await get_chat_participants(chat_id)
        
        if not participants:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ {chat_id}")
            try:
                await callback.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞.")
            except Exception:
                logger.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ callback (–≤–æ–∑–º–æ–∂–Ω–æ, —É—Å—Ç–∞—Ä–µ–ª)")
            return
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –±—Ä–æ—Å–æ–∫
        game_result = game_logic.process_throw(
            initiator_id=user.id,
            initiator_username=user.username or f"user{user.id}",
            participants=participants,
            chat_id=chat_id
        )
        
        # –ï—Å–ª–∏ –∫—É–ª–¥–∞—É–Ω ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —É–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫
        if isinstance(game_result, dict) and game_result.get('error') == 'cooldown':
            cooldown_msg = await callback.message.answer(
                f"‚è∞ {game_result['message']}",
                reply_markup=get_throw_button()
            )
            await asyncio.sleep(5)
            try:
                await cooldown_msg.delete()
            except Exception:
                pass
            try:
                await callback.answer("‚è∞ –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ‚Ä¶")
            except Exception:
                pass
            return
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ –±–∞–∑—É
        for target in game_result['targets']:
            await db.add_event(
                initiator_id=user.id,
                target_id=target[0],
                outcome=game_result['outcome'],
                chat_id=chat_id
            )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        await db.update_user_stats(user.id, game_result['outcome'], is_target=False)
        for target in game_result['targets']:
            await db.update_user_stats(target[0], game_result['outcome'], is_target=True)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
        emoji = game_logic.get_emoji_for_outcome(game_result['outcome'])
        result_message = f"{emoji} {game_result['message']}"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        await callback.message.answer(
            result_message,
            reply_markup=get_throw_button()
        )
        
        # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
        try:
            await callback.answer("üí© –ì–æ–≤–Ω–æ –ø–æ–ª–µ—Ç–µ–ª–æ!")
        except Exception:
            logger.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ callback (–≤–æ–∑–º–æ–∂–Ω–æ, —É—Å—Ç–∞—Ä–µ–ª)")
        
        logger.info(f"‚úÖ –ë—Ä–æ—Å–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω: {user.username} -> {game_result['outcome']} -> {len(game_result['targets'])} —Ü–µ–ª–µ–π")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±—Ä–æ—Å–∫–∞: {e}")
        try:
            await callback.answer("‚ùå –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫")
        except Exception:
            logger.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ callback (–≤–æ–∑–º–æ–∂–Ω–æ, —É—Å—Ç–∞—Ä–µ–ª)")

@dp.message(F.text.contains("–∫–∏–Ω—É—Ç—å –≥–æ–≤–Ω–æ –≤"))
async def handle_manual_throw(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã –±—Ä–æ—Å–∫–∞"""
    try:
        user = message.from_user
        chat_id = message.chat.id
        
        logger.info(f"üí© –†—É—á–Ω–æ–π –≤–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã –æ—Ç {user.username} (ID: {user.id}) –≤ —á–∞—Ç–µ {chat_id}: {message.text}")
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º username —Ü–µ–ª–∏
        text = message.text.lower()
        if "–∫–∏–Ω—É—Ç—å –≥–æ–≤–Ω–æ –≤ @" in text:
            target_username = text.split("–∫–∏–Ω—É—Ç—å –≥–æ–≤–Ω–æ –≤ @")[1].split()[0]
            logger.debug(f"üéØ –¶–µ–ª—å —Ä—É—á–Ω–æ–≥–æ –±—Ä–æ—Å–∫–∞: @{target_username}")
            
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
            await asyncio.sleep(GAME_SETTINGS['message_delete_delay'])
            try:
                await message.delete()
                logger.debug(f"üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username} —É–¥–∞–ª–µ–Ω–æ")
            except:
                logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username}")
                pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É
            await db.add_user(
                user_id=user.id,
                username=user.username,
                first_name=user.first_name,
                last_name=user.last_name
            )
            
            # –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞
            participants = await get_chat_participants(chat_id)
            
            if participants:
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –±—Ä–æ—Å–æ–∫
                game_result = game_logic.process_throw(
                    initiator_id=user.id,
                    initiator_username=user.username or f"user{user.id}",
                    participants=participants,
                    chat_id=chat_id
                )
                
                # –ï—Å–ª–∏ –∫—É–ª–¥–∞—É–Ω ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —É–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫
                if isinstance(game_result, dict) and game_result.get('error') == 'cooldown':
                    cooldown_msg = await message.answer(
                        f"‚è∞ {game_result['message']}",
                        reply_markup=get_throw_button()
                    )
                    await asyncio.sleep(5)
                    try:
                        await cooldown_msg.delete()
                    except Exception:
                        pass
                    try:
                        await message.answer("‚è∞ –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ‚Ä¶")
                    except Exception:
                        pass
                    return
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ –±–∞–∑—É
                for target in game_result['targets']:
                    await db.add_event(
                        initiator_id=user.id,
                        target_id=target[0],
                        outcome=game_result['outcome'],
                        chat_id=chat_id
                    )
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                await db.update_user_stats(user.id, game_result['outcome'], is_target=False)
                for target in game_result['targets']:
                    await db.update_user_stats(target[0], game_result['outcome'], is_target=True)
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
                emoji = game_logic.get_emoji_for_outcome(game_result['outcome'])
                result_message = f"{emoji} {game_result['message']}"
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                await message.answer(
                    result_message,
                    reply_markup=get_throw_button()
                )
                
                logger.info(f"‚úÖ –†—É—á–Ω–æ–π –±—Ä–æ—Å–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω: {user.username} -> {game_result['outcome']} -> {len(game_result['targets'])} —Ü–µ–ª–µ–π")
            else:
                logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ {chat_id} –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –±—Ä–æ—Å–∫–∞")
                await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞.")
    
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä—É—á–Ω–æ–≥–æ –±—Ä–æ—Å–∫–∞: {e}")

@dp.message(Command("refresh"))
async def cmd_refresh(message: types.Message):
    """–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞"""
    user = message.from_user
    chat_id = message.chat.id
    
    logger.info(f"üîÑ –ö–æ–º–∞–Ω–¥–∞ /refresh –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username} (ID: {user.id}) –≤ —á–∞—Ç–µ {chat_id}")
    
    # –û—á–∏—â–∞–µ–º –∫—ç—à –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞ (—É–¥–∞–ª—è–µ–º –≤—Å–µ –∫–ª—é—á–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —ç—Ç–∏–º —á–∞—Ç–æ–º)
    keys_to_remove = [key for key in chat_participants_cache.keys() if key.startswith(f"{chat_id}_")]
    for key in keys_to_remove:
        del chat_participants_cache[key]
        logger.info(f"üóëÔ∏è –ö—ç—à —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ {chat_id} –æ—á–∏—â–µ–Ω (–∫–ª—é—á: {key})")
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    participants = await get_chat_participants(chat_id)
    
    if participants:
        success_msg = await message.answer(
            f"‚úÖ –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω! –ù–∞–π–¥–µ–Ω–æ {len(participants)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.",
            reply_markup=get_throw_button()
        )
        logger.info(f"‚úÖ –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ {chat_id} –æ–±–Ω–æ–≤–ª–µ–Ω: {len(participants)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
        await asyncio.sleep(10)
        try:
            await success_msg.delete()
            logger.debug(f"üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –∫–æ–º–∞–Ω–¥—ã /refresh –æ—Ç {user.username} —É–¥–∞–ª–µ–Ω–æ")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –æ—Ç {user.username}: {e}")
    else:
        error_msg = await message.answer(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞.",
            reply_markup=get_throw_button()
        )
        logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ {chat_id}")
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        await asyncio.sleep(5)
        try:
            await error_msg.delete()
            logger.debug(f"üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∫–æ–º–∞–Ω–¥—ã /refresh –æ—Ç {user.username} —É–¥–∞–ª–µ–Ω–æ")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –æ—Ç {user.username}: {e}")

@dp.message(Command("participants"))
async def cmd_participants(message: types.Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞"""
    user = message.from_user
    chat_id = message.chat.id
    
    logger.info(f"üë• –ö–æ–º–∞–Ω–¥–∞ /participants –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username} (ID: {user.id}) –≤ —á–∞—Ç–µ {chat_id}")
    
    # –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞
    participants = await get_chat_participants(chat_id)
    
    if not participants:
        error_msg = await message.answer(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞.",
            reply_markup=get_throw_button()
        )
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        await asyncio.sleep(5)
        try:
            await error_msg.delete()
            logger.debug(f"üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∫–æ–º–∞–Ω–¥—ã /participants –æ—Ç {user.username} —É–¥–∞–ª–µ–Ω–æ")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –æ—Ç {user.username}: {e}")
        
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    participants_text = f"üë• <b>–£—á–∞—Å—Ç–Ω–∏–∫–∏ —á–∞—Ç–∞ ({len(participants)}):</b>\n\n"
    
    for i, (user_id, username) in enumerate(participants, 1):
        display_name = f"@{username}" if username and not username.startswith("user") else username
        participants_text += f"{i}. {display_name}\n"
    
    participants_text += f"\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /go @username –¥–ª—è –º–µ—Ç–∞–Ω–∏—è –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    
    participants_msg = await message.answer(
        participants_text,
        parse_mode="HTML",
        reply_markup=get_throw_button()
    )
    
    logger.info(f"‚úÖ –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.username}")
    
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
    await asyncio.sleep(15)
    try:
        await participants_msg.delete()
        logger.debug(f"üóëÔ∏è –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ—Ç {user.username} —É–¥–∞–ª–µ–Ω")
    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ—Ç {user.username}: {e}")

@dp.message(Command("go"))
async def cmd_go(message: types.Message):
    """–ú–µ—Ç–Ω—É—Ç—å –≥–æ–≤–Ω–æ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user = message.from_user
    chat_id = message.chat.id
    
    logger.info(f"üí© –ö–æ–º–∞–Ω–¥–∞ /go –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username} (ID: {user.id}) –≤ —á–∞—Ç–µ {chat_id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç (username —Ü–µ–ª–∏)
    if not message.text or len(message.text.split()) < 2:
        error_msg = await message.answer(
            "üí© –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /go @username\n"
            "–ü—Ä–∏–º–µ—Ä: /go @ivan\n\n"
            "üéØ –ú–µ—Ç–∞–µ—Ç –≥–æ–≤–Ω–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!",
            reply_markup=get_throw_button()
        )
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        await asyncio.sleep(5)
        try:
            await error_msg.delete()
            logger.debug(f"üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∫–æ–º–∞–Ω–¥—ã /go –æ—Ç {user.username} —É–¥–∞–ª–µ–Ω–æ")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –æ—Ç {user.username}: {e}")
        
        return
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º username —Ü–µ–ª–∏
    target_username = message.text.split()[1].lstrip('@')
    logger.info(f"üéØ –¶–µ–ª—å –∫–æ–º–∞–Ω–¥—ã /go: @{target_username}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É
    await db.add_user(
        user_id=user.id,
        username=user.username,
        first_name=user.first_name,
        last_name=user.last_name
    )
    
    # –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞
    participants = await get_chat_participants(chat_id)
    
    if not participants:
        error_msg = await message.answer(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞.",
            reply_markup=get_throw_button()
        )
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        await asyncio.sleep(5)
        try:
            await error_msg.delete()
            logger.debug(f"üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∫–æ–º–∞–Ω–¥—ã /go –æ—Ç {user.username} —É–¥–∞–ª–µ–Ω–æ")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –æ—Ç {user.username}: {e}")
        
        return
    
    # –ò—â–µ–º —Ü–µ–ª—å –ø–æ username
    target_user = None
    for user_id, username in participants:
        if username.lower() == target_username.lower() or f"@{username.lower()}" == f"@{target_username.lower()}":
            target_user = (user_id, username)
            break
    
    if not target_user:
        error_msg = await message.answer(
            f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{target_username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —á–∞—Ç–µ.\n\n"
            "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:\n"
            "‚Ä¢ Username –Ω–∞–ø–∏—Å–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ\n"
            "‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —ç—Ç–æ–º —á–∞—Ç–µ\n"
            "‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /refresh –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞",
            reply_markup=get_throw_button()
        )
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        await asyncio.sleep(5)
        try:
            await error_msg.delete()
            logger.debug(f"üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∫–æ–º–∞–Ω–¥—ã /go –æ—Ç {user.username} —É–¥–∞–ª–µ–Ω–æ")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –æ—Ç {user.username}: {e}")
        
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ü–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–∞–º–∏–º –º–µ—Ç–∞—Ç–µ–ª–µ–º
    if target_user[0] == user.id:
        error_msg = await message.answer(
            "ü§° –ù–µ–ª—å–∑—è –º–µ—Ç–∞—Ç—å –≥–æ–≤–Ω–æ –≤ —Å–∞–º–æ–≥–æ —Å–µ–±—è! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Ü–µ–ª—å.",
            reply_markup=get_throw_button()
        )
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        await asyncio.sleep(5)
        try:
            await error_msg.delete()
            logger.debug(f"üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∫–æ–º–∞–Ω–¥—ã /go –æ—Ç {user.username} —É–¥–∞–ª–µ–Ω–æ")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –æ—Ç {user.username}: {e}")
        
        return
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –±—Ä–æ—Å–æ–∫ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Ü–µ–ª—å
    game_result = game_logic.process_throw_at_target(
        initiator_id=user.id,
        initiator_username=user.username or f"user{user.id}",
        target_id=target_user[0],
        target_username=target_user[1],
        chat_id=chat_id
    )
    
    # –ï—Å–ª–∏ –∫—É–ª–¥–∞—É–Ω ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —É–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫
    if isinstance(game_result, dict) and game_result.get('error') == 'cooldown':
        cooldown_msg = await message.answer(
            f"‚è∞ {game_result['message']}",
            reply_markup=get_throw_button()
        )
        await asyncio.sleep(5)
        try:
            await cooldown_msg.delete()
        except Exception:
            pass
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–∫–∏ (–∫—É–ª–¥–∞—É–Ω, —Å–∞–º–æ—Ü–µ–ª—å –∏ —Ç.–¥.)
    if 'error' in game_result:
        error_msg = await message.answer(
            game_result['message'],
            reply_markup=get_throw_button()
        )
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        await asyncio.sleep(5)
        try:
            await error_msg.delete()
        except Exception:
            pass
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    await db.update_user_heat(user.id, game_result.get('heat_at_throw', 0))
    await db.update_score(user.id, game_result.get('score_delta', 0))
    if game_result.get('role_used'):
        expires_at = datetime.now() + timedelta(seconds=3600)  # 1 —á–∞—Å
        await db.update_user_role(user.id, game_result['role_used'], expires_at.isoformat())
    await db.update_user_last_throw(user.id)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ –±–∞–∑—É —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏
    await db.add_event(
        initiator_id=user.id,
        target_id=target_user[0],
        outcome=game_result['outcome'],
        chat_id=chat_id,
        role_used=game_result.get('role_used'),
        stacks_at_hit=game_result.get('focus_stacks', 0),
        heat_at_hit=game_result.get('heat_at_throw', 0),
        was_reflect=0,  # TODO: —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ
        targets_json=str(game_result['targets'])
    )
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ–∫—É—Å –≤ –ë–î
    focus_stacks = game_result.get('focus_stacks', 0)
    penalty_until = None
    if focus_stacks > 3:  # –®—Ç—Ä–∞—Ñ –∑–∞ —Ñ–æ–∫—É—Å
        penalty_until = (datetime.now() + timedelta(seconds=300)).isoformat()  # 5 –º–∏–Ω—É—Ç
    await db.set_focus(user.id, target_user[0], chat_id, focus_stacks, penalty_until)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    await db.update_user_stats(user.id, game_result['outcome'], is_target=False)
    await db.update_user_stats(target_user[0], game_result['outcome'], is_target=True)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
    emoji = game_logic.get_emoji_for_outcome(game_result['outcome'])
    result_message = f"{emoji} {game_result['message']}"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–æ–ª–∏ –∏ heat
    if game_result.get('role_used'):
        role_names = {
            'sniper': 'üéØ –°–Ω–∞–π–ø–µ—Ä',
            'bombardier': 'üí£ –ë–æ–º–±–∞—Ä–¥–∏—Ä', 
            'defender': 'üõ°Ô∏è –û–±–æ—Ä–æ–Ω–µ—Ü'
        }
        role_name = role_names.get(game_result['role_used'], game_result['role_used'])
        result_message += f"\n\nüé≠ {role_name}"
    
    if game_result.get('heat_at_throw', 0) > 50:
        result_message += f"\nüî• –†–µ–ø—É—Ç–∞—Ü–∏—è –∞–≥—Ä–µ—Å—Å–æ—Ä–∞: {game_result['heat_at_throw']}/100"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    await message.answer(
        result_message,
        reply_markup=get_throw_button()
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—É–±–ª–∏—á–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã
    if game_result.get('public_signals'):
        signals = game_result['public_signals']
        if signals.get('call_to_action'):
            signals_msg = await message.answer(
                f"üì¢ {signals['call_to_action']}",
                reply_markup=get_throw_button()
            )
            # –£–¥–∞–ª—è–µ–º —Å–∏–≥–Ω–∞–ª—ã —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
            await asyncio.sleep(15)
            try:
                await signals_msg.delete()
            except Exception:
                pass
    
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    await asyncio.sleep(GAME_SETTINGS['message_delete_delay'])
    try:
        await message.delete()
        logger.debug(f"üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /go –æ—Ç {user.username} —É–¥–∞–ª–µ–Ω–æ")
    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /go –æ—Ç {user.username}: {e}")
        pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
    
    logger.info(f"‚úÖ –¶–µ–ª–µ–≤–æ–π –±—Ä–æ—Å–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω: {user.username} -> {target_user[1]} -> {game_result['outcome']}")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.log_startup()
    
    max_retries = 5
    retry_delay = 10
    
    for attempt in range(max_retries):
        try:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
            logger.info(f"ü§ñ –ë–æ—Ç –ì–æ–≤–Ω–æ–ú—ë—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ! (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}/{max_retries})")
            await dp.start_polling(bot, skip_updates=True)
            break  # –ï—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
            
        except Exception as e:
            logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}/{max_retries}): {e}")
            
            if attempt < max_retries - 1:
                logger.info(f"üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ {retry_delay} —Å–µ–∫—É–Ω–¥...")
                await asyncio.sleep(retry_delay)
                retry_delay *= 2  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É —Å –∫–∞–∂–¥–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
            else:
                logger.error("‚ùå –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–ø—É—Å–∫–∞ –∏—Å—á–µ—Ä–ø–∞–Ω—ã. –ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω.")
                break
        finally:
            logger.log_shutdown()
            try:
                await bot.session.close()
            except Exception as e:
                logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–µ—Å—Å–∏–∏: {e}")

if __name__ == "__main__":
    asyncio.run(main())

